Grading at 12/06/2022:16:54:03.083013
For commit ID e3bc327f122580b54b694955d9a6f8525da470be
Grading at Tue Dec  6 11:53:41 AM EST 2022
Doing some basic checking for your submission

Step 1
Checking that cyoa-step1 compiles
make: 'cyoa-step1' is up to date.
The code compiled (good)
Executable cyoa-step1 exists (good)
------------------------------------
Now running YOUR tests for step 1
------------------------------------


1.1: Current test is ./cyoa-step1 /usr/local/ece551/cyoa/story1 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


1.2: Current test is ./cyoa-step1 /usr/local/ece551/cyoa/story2 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


1.3: Current test is ./cyoa-step1 unSequentialPage < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
page numbers have to be sequential!
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.4: Current test is ./cyoa-step1 invalidFormat < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
0::1:I am ready for this story!does not have destination page number!
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.5: Current test is ./cyoa-step1 invalidPageDeclaration < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
valid types for pages only contain N, W and L!
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.6: Current test is ./cyoa-step1 invalidSrcNum < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
the source number in (5e:14:Silent Night, accompanied by raven calls) is invalid!
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.7: Current test is ./cyoa-step1 invalidType < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
valid types for pages only contain N, W and L!
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.8: Current test is ./cyoa-step1 invalidDesNum < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
the destination number in (1:df:Choose the magic whistle.) is invalid!
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.9: Current test is ./cyoa-step1 noDesNum < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
1::Choose the magic whistle.does not have destination page number!
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.10: Current test is ./cyoa-step1 noSrcNum < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
:1:I am ready for this story!does not have source page number!
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.11: Current test is ./cyoa-step1 largePageNum < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
one source page number is too large!
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.12: Current test is ./cyoa-step1 unExistFile < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
fail to open file unExistFile/page10000.txt or no such file exists
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean
No request to check for intermediate deadline completion on step 1

Step 2
Checking that cyoa-step2 compiles
make: 'cyoa-step2' is up to date.
The code compiled (good)
Executable cyoa-step2 exists (good)
------------------------------------
Now running YOUR tests for step 2
------------------------------------


2.1: Current test is ./cyoa-step2 story1  <  story1/inputs/input0.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.2: Current test is ./cyoa-step2 story1  <  story1/inputs/input1.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.3: Current test is ./cyoa-step2 story1  <  story1/inputs/input2.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.4: Current test is ./cyoa-step2 invalidPage  <  story1/inputs/input2.txt
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
some page(s) is not valid!
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


2.5: Current test is ./cyoa-step2 noRerencedPage  <  story1/inputs/input2.txt
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
some page(s) is not referenced by other pages!
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


2.6: Current test is ./cyoa-step2 noWinorLose  <  story1/inputs/input2.txt
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
Win and(or) Lose pages do not exist!
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean
No request to check for intermediate deadline completion on step 2

Step 3
Checking that cyoa-step3 compiles
make: 'cyoa-step3' is up to date.
The code compiled (good)
Executable cyoa-step3 exists (good)
------------------------------------
Now running YOUR tests for step 3
------------------------------------


3.1: Current test is ./cyoa-step3 story1 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


3.2: Current test is ./cyoa-step3 story2 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean
No request to check for intermediate deadline completion on step 3

Step 4
Checking that cyoa-step4 compiles
make: 'cyoa-step4' is up to date.
The code compiled (good)
Executable cyoa-step4 exists (good)
------------------------------------
Now running YOUR tests for step 4
------------------------------------


4.1: Current test is ./cyoa-step4 story1  <  story3/inputs/input0.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.2: Current test is ./cyoa-step4 story1  <  story3/inputs/input1.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.3: Current test is ./cyoa-step4 story1  <  story3/inputs/input2.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean
No request to check for intermediate deadline completion on step 4

You have passed the test cases YOU provided
If your tests are good, this is great. 
If your tests are insufficient, you should do much more testing

Overall Grade: NO GRADE YET
